/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

import { Route as rootRouteImport } from './routes/__root'
import { Route as PrivacyPolicyRouteImport } from './routes/privacy-policy'
import { Route as ChatRouteImport } from './routes/chat'
import { Route as AboutRouteImport } from './routes/about'
import { Route as SettingsRouteRouteImport } from './routes/settings/route'
import { Route as RouteRouteImport } from './routes/route'
import { Route as ChatIndexRouteImport } from './routes/chat.index'
import { Route as SettingsUsageRouteImport } from './routes/settings/usage'
import { Route as SettingsProfileRouteImport } from './routes/settings/profile'
import { Route as SettingsAppearanceRouteImport } from './routes/settings/appearance'
import { Route as ChatConversationIdRouteImport } from './routes/chat.$conversationId'

const AuthSignUpLazyRouteImport = createFileRoute('/auth/sign-up')()
const AuthSignInLazyRouteImport = createFileRoute('/auth/sign-in')()

const PrivacyPolicyRoute = PrivacyPolicyRouteImport.update({
  id: '/privacy-policy',
  path: '/privacy-policy',
  getParentRoute: () => rootRouteImport,
} as any)
const ChatRoute = ChatRouteImport.update({
  id: '/chat',
  path: '/chat',
  getParentRoute: () => rootRouteImport,
} as any)
const AboutRoute = AboutRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRouteImport,
} as any)
const SettingsRouteRoute = SettingsRouteRouteImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => rootRouteImport,
} as any)
const RouteRoute = RouteRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const ChatIndexRoute = ChatIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => ChatRoute,
} as any)
const AuthSignUpLazyRoute = AuthSignUpLazyRouteImport.update({
  id: '/auth/sign-up',
  path: '/auth/sign-up',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() => import('./routes/auth/sign-up.lazy').then((d) => d.Route))
const AuthSignInLazyRoute = AuthSignInLazyRouteImport.update({
  id: '/auth/sign-in',
  path: '/auth/sign-in',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() => import('./routes/auth/sign-in.lazy').then((d) => d.Route))
const SettingsUsageRoute = SettingsUsageRouteImport.update({
  id: '/usage',
  path: '/usage',
  getParentRoute: () => SettingsRouteRoute,
} as any)
const SettingsProfileRoute = SettingsProfileRouteImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => SettingsRouteRoute,
} as any)
const SettingsAppearanceRoute = SettingsAppearanceRouteImport.update({
  id: '/appearance',
  path: '/appearance',
  getParentRoute: () => SettingsRouteRoute,
} as any)
const ChatConversationIdRoute = ChatConversationIdRouteImport.update({
  id: '/$conversationId',
  path: '/$conversationId',
  getParentRoute: () => ChatRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof RouteRoute
  '/settings': typeof SettingsRouteRouteWithChildren
  '/about': typeof AboutRoute
  '/chat': typeof ChatRouteWithChildren
  '/privacy-policy': typeof PrivacyPolicyRoute
  '/chat/$conversationId': typeof ChatConversationIdRoute
  '/settings/appearance': typeof SettingsAppearanceRoute
  '/settings/profile': typeof SettingsProfileRoute
  '/settings/usage': typeof SettingsUsageRoute
  '/auth/sign-in': typeof AuthSignInLazyRoute
  '/auth/sign-up': typeof AuthSignUpLazyRoute
  '/chat/': typeof ChatIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof RouteRoute
  '/settings': typeof SettingsRouteRouteWithChildren
  '/about': typeof AboutRoute
  '/privacy-policy': typeof PrivacyPolicyRoute
  '/chat/$conversationId': typeof ChatConversationIdRoute
  '/settings/appearance': typeof SettingsAppearanceRoute
  '/settings/profile': typeof SettingsProfileRoute
  '/settings/usage': typeof SettingsUsageRoute
  '/auth/sign-in': typeof AuthSignInLazyRoute
  '/auth/sign-up': typeof AuthSignUpLazyRoute
  '/chat': typeof ChatIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof RouteRoute
  '/settings': typeof SettingsRouteRouteWithChildren
  '/about': typeof AboutRoute
  '/chat': typeof ChatRouteWithChildren
  '/privacy-policy': typeof PrivacyPolicyRoute
  '/chat/$conversationId': typeof ChatConversationIdRoute
  '/settings/appearance': typeof SettingsAppearanceRoute
  '/settings/profile': typeof SettingsProfileRoute
  '/settings/usage': typeof SettingsUsageRoute
  '/auth/sign-in': typeof AuthSignInLazyRoute
  '/auth/sign-up': typeof AuthSignUpLazyRoute
  '/chat/': typeof ChatIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/settings'
    | '/about'
    | '/chat'
    | '/privacy-policy'
    | '/chat/$conversationId'
    | '/settings/appearance'
    | '/settings/profile'
    | '/settings/usage'
    | '/auth/sign-in'
    | '/auth/sign-up'
    | '/chat/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/settings'
    | '/about'
    | '/privacy-policy'
    | '/chat/$conversationId'
    | '/settings/appearance'
    | '/settings/profile'
    | '/settings/usage'
    | '/auth/sign-in'
    | '/auth/sign-up'
    | '/chat'
  id:
    | '__root__'
    | '/'
    | '/settings'
    | '/about'
    | '/chat'
    | '/privacy-policy'
    | '/chat/$conversationId'
    | '/settings/appearance'
    | '/settings/profile'
    | '/settings/usage'
    | '/auth/sign-in'
    | '/auth/sign-up'
    | '/chat/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  RouteRoute: typeof RouteRoute
  SettingsRouteRoute: typeof SettingsRouteRouteWithChildren
  AboutRoute: typeof AboutRoute
  ChatRoute: typeof ChatRouteWithChildren
  PrivacyPolicyRoute: typeof PrivacyPolicyRoute
  AuthSignInLazyRoute: typeof AuthSignInLazyRoute
  AuthSignUpLazyRoute: typeof AuthSignUpLazyRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/privacy-policy': {
      id: '/privacy-policy'
      path: '/privacy-policy'
      fullPath: '/privacy-policy'
      preLoaderRoute: typeof PrivacyPolicyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/chat': {
      id: '/chat'
      path: '/chat'
      fullPath: '/chat'
      preLoaderRoute: typeof ChatRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/settings': {
      id: '/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof SettingsRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof RouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/chat/': {
      id: '/chat/'
      path: '/'
      fullPath: '/chat/'
      preLoaderRoute: typeof ChatIndexRouteImport
      parentRoute: typeof ChatRoute
    }
    '/auth/sign-up': {
      id: '/auth/sign-up'
      path: '/auth/sign-up'
      fullPath: '/auth/sign-up'
      preLoaderRoute: typeof AuthSignUpLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/sign-in': {
      id: '/auth/sign-in'
      path: '/auth/sign-in'
      fullPath: '/auth/sign-in'
      preLoaderRoute: typeof AuthSignInLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/settings/usage': {
      id: '/settings/usage'
      path: '/usage'
      fullPath: '/settings/usage'
      preLoaderRoute: typeof SettingsUsageRouteImport
      parentRoute: typeof SettingsRouteRoute
    }
    '/settings/profile': {
      id: '/settings/profile'
      path: '/profile'
      fullPath: '/settings/profile'
      preLoaderRoute: typeof SettingsProfileRouteImport
      parentRoute: typeof SettingsRouteRoute
    }
    '/settings/appearance': {
      id: '/settings/appearance'
      path: '/appearance'
      fullPath: '/settings/appearance'
      preLoaderRoute: typeof SettingsAppearanceRouteImport
      parentRoute: typeof SettingsRouteRoute
    }
    '/chat/$conversationId': {
      id: '/chat/$conversationId'
      path: '/$conversationId'
      fullPath: '/chat/$conversationId'
      preLoaderRoute: typeof ChatConversationIdRouteImport
      parentRoute: typeof ChatRoute
    }
  }
}

interface SettingsRouteRouteChildren {
  SettingsAppearanceRoute: typeof SettingsAppearanceRoute
  SettingsProfileRoute: typeof SettingsProfileRoute
  SettingsUsageRoute: typeof SettingsUsageRoute
}

const SettingsRouteRouteChildren: SettingsRouteRouteChildren = {
  SettingsAppearanceRoute: SettingsAppearanceRoute,
  SettingsProfileRoute: SettingsProfileRoute,
  SettingsUsageRoute: SettingsUsageRoute,
}

const SettingsRouteRouteWithChildren = SettingsRouteRoute._addFileChildren(
  SettingsRouteRouteChildren,
)

interface ChatRouteChildren {
  ChatConversationIdRoute: typeof ChatConversationIdRoute
  ChatIndexRoute: typeof ChatIndexRoute
}

const ChatRouteChildren: ChatRouteChildren = {
  ChatConversationIdRoute: ChatConversationIdRoute,
  ChatIndexRoute: ChatIndexRoute,
}

const ChatRouteWithChildren = ChatRoute._addFileChildren(ChatRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  RouteRoute: RouteRoute,
  SettingsRouteRoute: SettingsRouteRouteWithChildren,
  AboutRoute: AboutRoute,
  ChatRoute: ChatRouteWithChildren,
  PrivacyPolicyRoute: PrivacyPolicyRoute,
  AuthSignInLazyRoute: AuthSignInLazyRoute,
  AuthSignUpLazyRoute: AuthSignUpLazyRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
